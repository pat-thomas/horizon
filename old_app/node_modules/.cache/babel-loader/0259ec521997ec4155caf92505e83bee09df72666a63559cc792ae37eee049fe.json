{"ast":null,"code":"const splitPrompt = rawPrompt => {\n  let splitParts = rawPrompt.split('::');\n  return splitParts.filter(part => {\n    return part.trim() !== '';\n  });\n};\nconst onRawPromptInputChange = (appState, e) => {\n  console.log('onRawPromptInputChange');\n  const inputVal = e.target.value;\n  let newAppState = {\n    ...appState\n  };\n  const rawPromptParts = splitPrompt(inputVal);\n  newAppState.rawPrompt = inputVal;\n  newAppState.promptParts = rawPromptParts.map(part => {\n    return {\n      text: part.trim(),\n      weight: '1' // TODO make this parseable from the prompt, i.e. foo::1 bar::0.5 baz::2\n    };\n  });\n\n  return newAppState;\n};\nconst onPromptPartWeightInputChange = (appState, e, index, weight) => {\n  const inputVal = e.target.value;\n  let newAppState = {\n    ...appState\n  };\n  newAppState.promptParts[index].weight = inputVal;\n  return newAppState;\n};\nconst onSuffixChange = (appState, e) => {\n  let newAppState = {\n    ...appState\n  };\n  newAppState.params.suffix = inputVal;\n  return newAppState;\n};\nconst eventListeners = {\n  onRawPromptInputChange: onRawPromptInputChange,\n  onPromptPartWeightInputChange: onPromptPartWeightInputChange\n};\nexport default eventListeners;","map":{"version":3,"names":["splitPrompt","rawPrompt","splitParts","split","filter","part","trim","onRawPromptInputChange","appState","e","console","log","inputVal","target","value","newAppState","rawPromptParts","promptParts","map","text","weight","onPromptPartWeightInputChange","index","onSuffixChange","params","suffix","eventListeners"],"sources":["/home/patthomassoftware/code/horizon/app/src/events.ts"],"sourcesContent":["import { ChangeEvent } from 'react';\nimport { AppState } from './types';\n\nconst splitPrompt = (rawPrompt: string) => {\n  let splitParts = rawPrompt.split('::');\n  return splitParts.filter((part) => {\n    return part.trim() !== '';\n  });\n};\n\nconst onRawPromptInputChange = (appState: AppState, e: ChangeEvent<HTMLInputElement>) => {\n  console.log('onRawPromptInputChange');\n  const inputVal = e.target.value;\n  let newAppState = { ...appState };\n  const rawPromptParts = splitPrompt(inputVal);\n  newAppState.rawPrompt = inputVal;\n  newAppState.promptParts = rawPromptParts.map((part) => {\n    return {\n      text: part.trim(),\n      weight: '1' // TODO make this parseable from the prompt, i.e. foo::1 bar::0.5 baz::2\n    }\n  });\n  return newAppState;\n};\n\nconst onPromptPartWeightInputChange = (\n  appState: AppState,\n  e: ChangeEvent<HTMLInputElement>,\n  index: number,\n  weight: string\n) => {\n  const inputVal = e.target.value;\n  let newAppState = { ...appState };\n  newAppState.promptParts[index].weight = inputVal;\n  return newAppState;\n};\n\nconst onSuffixChange = (appState: AppState, e: React.ChangeEvent<HTMLInputElement>) => {\n  let newAppState = { ...appState };\n  newAppState.params.suffix = inputVal;\n  return newAppState;\n};\n\n\nconst eventListeners = {\n  onRawPromptInputChange: onRawPromptInputChange,\n  onPromptPartWeightInputChange: onPromptPartWeightInputChange\n}\n\nexport default eventListeners;\n"],"mappings":"AAGA,MAAMA,WAAW,GAAIC,SAAiB,IAAK;EACzC,IAAIC,UAAU,GAAGD,SAAS,CAACE,KAAK,CAAC,IAAI,CAAC;EACtC,OAAOD,UAAU,CAACE,MAAM,CAAEC,IAAI,IAAK;IACjC,OAAOA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;EAC3B,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,sBAAsB,GAAGA,CAACC,QAAkB,EAAEC,CAAgC,KAAK;EACvFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,MAAMC,QAAQ,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK;EAC/B,IAAIC,WAAW,GAAG;IAAE,GAAGP;EAAS,CAAC;EACjC,MAAMQ,cAAc,GAAGhB,WAAW,CAACY,QAAQ,CAAC;EAC5CG,WAAW,CAACd,SAAS,GAAGW,QAAQ;EAChCG,WAAW,CAACE,WAAW,GAAGD,cAAc,CAACE,GAAG,CAAEb,IAAI,IAAK;IACrD,OAAO;MACLc,IAAI,EAAEd,IAAI,CAACC,IAAI,CAAC,CAAC;MACjBc,MAAM,EAAE,GAAG,CAAC;IACd,CAAC;EACH,CAAC,CAAC;;EACF,OAAOL,WAAW;AACpB,CAAC;AAED,MAAMM,6BAA6B,GAAGA,CACpCb,QAAkB,EAClBC,CAAgC,EAChCa,KAAa,EACbF,MAAc,KACX;EACH,MAAMR,QAAQ,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK;EAC/B,IAAIC,WAAW,GAAG;IAAE,GAAGP;EAAS,CAAC;EACjCO,WAAW,CAACE,WAAW,CAACK,KAAK,CAAC,CAACF,MAAM,GAAGR,QAAQ;EAChD,OAAOG,WAAW;AACpB,CAAC;AAED,MAAMQ,cAAc,GAAGA,CAACf,QAAkB,EAAEC,CAAsC,KAAK;EACrF,IAAIM,WAAW,GAAG;IAAE,GAAGP;EAAS,CAAC;EACjCO,WAAW,CAACS,MAAM,CAACC,MAAM,GAAGb,QAAQ;EACpC,OAAOG,WAAW;AACpB,CAAC;AAGD,MAAMW,cAAc,GAAG;EACrBnB,sBAAsB,EAAEA,sBAAsB;EAC9Cc,6BAA6B,EAAEA;AACjC,CAAC;AAED,eAAeK,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}