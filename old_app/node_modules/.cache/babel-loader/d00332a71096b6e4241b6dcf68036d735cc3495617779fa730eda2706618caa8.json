{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/projects/horizon/src/components/PromptBuilder.tsx\";\nimport React from 'react';\nimport PromptPiece from './PromptPiece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePartOutput = part => {\n  return `${part.text}::${part.weight}`;\n};\nconst generateOutput = promptParts => {\n  console.log(promptParts);\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n  let outputStr = '';\n  outputStr = promptParts.map(part => {\n    return generatePartOutput(part);\n  }).join('\\n');\n  return outputStr;\n};\nconst permutations = (arr, r = []) => {\n  let acc = [];\n  const innerPermutations = (innerArr, innerR = []) => {\n    if (arr.length === 0) {\n      acc.push(r);\n      console.log(r);\n    } else {\n      const first = arr[0];\n      for (let i = 0; i <= r.length; i++) {\n        innerPermutations(arr.slice(1), r.slice(0, i).concat([first]).concat(r.slice(i)));\n      }\n    }\n  };\n  innerPermutations(arr, r);\n  return acc;\n};\nconst permutator = inputArr => {\n  var results = [];\n  function permute(arr, memo) {\n    var cur,\n      memo = memo || [];\n    for (var i = 0; i < arr.length; i++) {\n      cur = arr.splice(i, 1);\n      if (arr.length === 0) {\n        results.push(memo.concat(cur));\n      }\n      permute(arr.slice(), memo.concat(cur));\n      arr.splice(i, 0, cur[0]);\n    }\n    return results;\n  }\n  return permute(inputArr, []);\n};\nconst PromptBuilder = ({\n  appState,\n  onPromptPartWeightInputChange\n}) => {\n  const promptParts = appState.promptParts;\n  const outputStr = generateOutput(promptParts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"promptBuilder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: promptParts.map((partData, index) => {\n        const promptPieceProps = {\n          onPromptPartWeightInputChange: onPromptPartWeightInputChange,\n          key: index,\n          index: index,\n          weight: partData.weight,\n          rawPromptPart: partData.text\n        };\n        return /*#__PURE__*/_jsxDEV(PromptPiece, {\n          ...promptPieceProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"/imagine prompt:\", outputStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptBuilder;\nexport default PromptBuilder;\nvar _c;\n$RefreshReg$(_c, \"PromptBuilder\");","map":{"version":3,"names":["React","PromptPiece","jsxDEV","_jsxDEV","generatePartOutput","part","text","weight","generateOutput","promptParts","console","log","length","trim","outputStr","map","join","permutations","arr","r","acc","innerPermutations","innerArr","innerR","push","first","i","slice","concat","permutator","inputArr","results","permute","memo","cur","splice","PromptBuilder","appState","onPromptPartWeightInputChange","className","children","partData","index","promptPieceProps","key","rawPromptPart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/projects/horizon/src/components/PromptBuilder.tsx"],"sourcesContent":["import React , { FC } from 'react';\nimport PromptPiece from './PromptPiece';\n\ninterface PromptBuilderProps {\n  appState: any\n  onPromptPartWeightInputChange: any\n}\n\nconst generatePartOutput = (part: any) => {\n  return `${part.text}::${part.weight}`;\n};\n\nconst generateOutput = (promptParts: any) => {\n  console.log(promptParts);\n\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n\n  let outputStr = '';\n  outputStr = promptParts.map((part: any) => {\n    return generatePartOutput(part);\n  }).join('\\n');\n\n  return outputStr;\n};\n\nconst permutations = (arr: any, r :any = []) => {\n  let acc: any[] = [];\n  const innerPermutations = (innerArr: any[], innerR: any[] = []) => {\n    if (arr.length === 0) {\n      acc.push(r);\n      console.log(r)\n    } else {\n      const first = arr[0]\n      for (let i = 0; i <= r.length; i++) {\n        innerPermutations(arr.slice(1), r.slice(0, i).concat([first]).concat(r.slice(i)))\n      }\n    }\n  };\n  innerPermutations(arr, r);\n  return acc;\n}\n\n\nconst permutator = (inputArr: any[]) => {\n  var results: any[] = [];\n\n  function permute(arr: any[], memo: any[]) {\n    var cur, memo = memo || [];\n\n    for (var i = 0; i < arr.length; i++) {\n      cur = arr.splice(i, 1);\n      if (arr.length === 0) {\n        results.push(memo.concat(cur));\n      }\n      permute(arr.slice(), memo.concat(cur));\n      arr.splice(i, 0, cur[0]);\n    }\n\n    return results;\n  }\n\n  return permute(inputArr, []);\n}\n\nconst PromptBuilder: FC<PromptBuilderProps> = ({\n  appState,\n  onPromptPartWeightInputChange\n}) => {\n  const promptParts: any[] = appState.promptParts;\n  const outputStr = generateOutput(promptParts);\n\n  return (\n    <div className=\"promptBuilder\">\n      <div>\n        {promptParts.map((partData: any, index: number) => {\n          const promptPieceProps = {\n            onPromptPartWeightInputChange: onPromptPartWeightInputChange,\n            key: index,\n            index: index,\n            weight: partData.weight,\n            rawPromptPart: partData.text\n          };\n          return (\n            <PromptPiece { ...promptPieceProps } />\n          );\n        })}\n      </div>\n\n      <div className=\"output\">\n        <p>/imagine prompt:{outputStr}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default PromptBuilder\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}