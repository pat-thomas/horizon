{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/code/horizon/app/src/components/GlobalParams.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalParams = ({\n  appState,\n  setAppState\n}) => {\n  _s();\n  const [suffixVisible, setSuffixVisible] = useState(false);\n  const toggleSuffixVisible = () => {\n    setSuffixVisible(suffixVisible => !suffixVisible);\n  };\n  const onSuffixInputChange = e => {\n    const inputVal = e.target.value;\n    let newAppState = {\n      ...appState\n    };\n    newAppState.params.suffix = inputVal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"globalParams\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Parameter configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"globalParamsSuffix\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSuffixVisible,\n        children: \"Click to configure suffix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), suffixVisible && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onSuffixInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Click to add artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalParams, \"G1nM3lx0atgHYM1pXuCu8d5borE=\");\n_c = GlobalParams;\nexport default GlobalParams;\nvar _c;\n$RefreshReg$(_c, \"GlobalParams\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GlobalParams","appState","setAppState","_s","suffixVisible","setSuffixVisible","toggleSuffixVisible","onSuffixInputChange","e","inputVal","target","value","newAppState","params","suffix","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/code/horizon/app/src/components/GlobalParams.tsx"],"sourcesContent":["import React , { FC , useState } from 'react';\n\ninterface GlobalParamsProps {\n  appState: any,\n  setAppState: any\n}\n\nconst GlobalParams: FC<GlobalParamsProps> = ({\n  appState,\n  setAppState\n}) => {\n  const [suffixVisible, setSuffixVisible] = useState(false);\n\n  const toggleSuffixVisible = () => {\n    setSuffixVisible((suffixVisible: boolean) => !suffixVisible);\n  };\n\n  const onSuffixInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputVal = e.target.value;\n    let newAppState = { ...appState };\n    newAppState.params.suffix = inputVal;\n  };\n\n  return (\n    <div className=\"globalParams\">\n      <p>Parameter configuration</p>\n      <div className=\"globalParamsSuffix\">\n        <button onClick={toggleSuffixVisible}>Click to configure suffix</button>\n        {suffixVisible && <input type=\"text\" onChange={onSuffixInputChange}></input>}\n      </div>\n      <div>\n        <button>Click to add artist</button>\n      </div>\n    </div>\n  )\n};\n\nexport default GlobalParams;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAUC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9C,MAAMC,YAAmC,GAAGA,CAAC;EAC3CC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,gBAAgB,CAAED,aAAsB,IAAK,CAACA,aAAa,CAAC;EAC9D,CAAC;EAED,MAAMG,mBAAmB,GAAIC,CAAsC,IAAK;IACtE,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC/B,IAAIC,WAAW,GAAG;MAAE,GAAGX;IAAS,CAAC;IACjCW,WAAW,CAACC,MAAM,CAACC,MAAM,GAAGL,QAAQ;EACtC,CAAC;EAED,oBACEV,OAAA;IAAKgB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BjB,OAAA;MAAAiB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9BrB,OAAA;MAAKgB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCjB,OAAA;QAAQsB,OAAO,EAAEf,mBAAoB;QAAAU,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvEhB,aAAa,iBAAIL,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEhB;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACNrB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAAiB,QAAA,EAAQ;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BIH,YAAmC;AAAAwB,EAAA,GAAnCxB,YAAmC;AA8BzC,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}