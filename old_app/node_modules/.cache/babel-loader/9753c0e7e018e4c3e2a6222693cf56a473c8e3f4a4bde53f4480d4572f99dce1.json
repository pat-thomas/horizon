{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/code/horizon/app/src/components/Output.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePartOutput = part => {\n  return `${part.text}::${part.weight}`;\n};\nconst generateOutput = appState => {\n  const promptParts = appState.promptParts;\n  console.log(promptParts);\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n  let outputStr = '';\n  outputStr = promptParts.map(part => {\n    return generatePartOutput(part);\n  }).join('\\n');\n  return outputStr;\n};\nconst Output = ({\n  appState: AppState\n}) => {\n  const outputStr = generateOutput(appState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"output\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"/imagine prompt:\", outputStr]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","generatePartOutput","part","text","weight","generateOutput","appState","promptParts","console","log","length","trim","outputStr","map","join","Output","AppState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/code/horizon/app/src/components/Output.tsx"],"sourcesContent":["import React , { FC } from 'react';\nimport type { AppState } from '../types';\n\ninterface OutputProps {\n  appState: AppState\n}\n\nconst generatePartOutput = (part: any) => {\n  return `${part.text}::${part.weight}`;\n};\n\nconst generateOutput = (appState: AppState) => {\n  const promptParts = appState.promptParts;\n  console.log(promptParts);\n\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n\n  let outputStr = '';\n  outputStr = promptParts.map((part: any) => {\n    return generatePartOutput(part);\n  }).join('\\n');\n\n  return outputStr;\n};\n\nconst Output: FC<OutputProps> = ({\n  appState: AppState\n}) => {\n  const outputStr = generateOutput(appState);\n  return (\n    <div className=\"output\">\n      <p>/imagine prompt:{outputStr}</p>\n    </div>\n  );\n};\n\nexport default Output\n"],"mappings":";AAAA,OAAOA,KAAK,MAAe,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnC,MAAMC,kBAAkB,GAAIC,IAAS,IAAK;EACxC,OAAQ,GAAEA,IAAI,CAACC,IAAK,KAAID,IAAI,CAACE,MAAO,EAAC;AACvC,CAAC;AAED,MAAMC,cAAc,GAAIC,QAAkB,IAAK;EAC7C,MAAMC,WAAW,GAAGD,QAAQ,CAACC,WAAW;EACxCC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EAExB,IAAIA,WAAW,CAACG,MAAM,KAAK,CAAC,IAAIH,WAAW,CAAC,CAAC,CAAC,CAACJ,IAAI,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjE,OAAO,EAAE;EACX;EAEA,IAAIC,SAAS,GAAG,EAAE;EAClBA,SAAS,GAAGL,WAAW,CAACM,GAAG,CAAEX,IAAS,IAAK;IACzC,OAAOD,kBAAkB,CAACC,IAAI,CAAC;EACjC,CAAC,CAAC,CAACY,IAAI,CAAC,IAAI,CAAC;EAEb,OAAOF,SAAS;AAClB,CAAC;AAED,MAAMG,MAAuB,GAAGA,CAAC;EAC/BT,QAAQ,EAAEU;AACZ,CAAC,KAAK;EACJ,MAAMJ,SAAS,GAAGP,cAAc,CAACC,QAAQ,CAAC;EAC1C,oBACEN,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBlB,OAAA;MAAAkB,QAAA,GAAG,kBAAgB,EAACN,SAAS;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACC,EAAA,GATIR,MAAuB;AAW7B,eAAeA,MAAM;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}