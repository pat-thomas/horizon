{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/projects/horizon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport PromptBuilder from './components/PromptBuilder';\nimport RawPromptInput from './components/RawPromptInput';\nimport Output from './components/Output';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialAppState = {\n  rawPrompt: '',\n  promptParts: [{\n    text: '',\n    weight: '1'\n  }]\n};\nconst splitPrompt = rawPrompt => {\n  let splitParts = rawPrompt.split('::');\n  return splitParts.filter(part => {\n    return part.trim() !== '';\n  });\n};\nconst App = () => {\n  _s();\n  const [appState, setAppState] = useState({});\n  const onRawPromptInputChange = e => {\n    const inputVal = e.target.value;\n    let newAppState = {\n      ...appState\n    };\n    const rawPromptParts = splitPrompt(inputVal);\n    newAppState.rawPrompt = inputVal;\n    newAppState.promptParts = rawPromptParts.map(part => {\n      return {\n        text: part.trim(),\n        weight: '1' // TODO make this parseable from the prompt, i.e. foo::1 bar::0.5 baz::2\n      };\n    });\n\n    console.log('set the new app state to', newAppState);\n    setAppState(newAppState);\n  };\n  const rawPromptInputProps = {\n    onChange: onRawPromptInputChange\n  };\n  const onPromptPartWeightInputChange = (promptIndex, newWeight) => {\n    let newAppState = {\n      ...appState\n    };\n    newAppState.promptParts[promptIndex].weight = newWeight;\n    setAppState(newAppState);\n  };\n  const promptBuilderProps = {\n    appState: appState,\n    onPromptPartWeightInputChange: onPromptPartWeightInputChange\n  };\n  const outputProps = {\n    appState: appState\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your Horizon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: [/*#__PURE__*/_jsxDEV(RawPromptInput, {\n        ...rawPromptInputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PromptBuilder, {\n        ...promptBuilderProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        ...outputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lyq7NjmEnFTHU/RIvahxAnfE2rs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PromptBuilder","RawPromptInput","Output","jsxDEV","_jsxDEV","initialAppState","rawPrompt","promptParts","text","weight","splitPrompt","splitParts","split","filter","part","trim","App","_s","appState","setAppState","onRawPromptInputChange","e","inputVal","target","value","newAppState","rawPromptParts","map","console","log","rawPromptInputProps","onChange","onPromptPartWeightInputChange","promptIndex","newWeight","promptBuilderProps","outputProps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/projects/horizon/src/App.tsx"],"sourcesContent":["import React , { useState } from 'react';\nimport './App.css';\nimport PromptBuilder from './components/PromptBuilder';\nimport RawPromptInput from './components/RawPromptInput';\nimport Output from './components/Output';\n\nconst initialAppState: AppState = {\n  rawPrompt: '',\n  promptParts: [{text: '', weight: '1'}]\n};\n\nconst splitPrompt = (rawPrompt: string) => {\n  let splitParts = rawPrompt.split('::');\n  return splitParts.filter((part) => {\n    return part.trim() !== '';\n  });\n};\n\nconst App: React.FC = () => {\n  const [appState, setAppState] = useState({\n  });\n\n  const onRawPromptInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputVal = e.target.value;\n    let newAppState = { ...appState };\n    const rawPromptParts = splitPrompt(inputVal);\n    newAppState.rawPrompt = inputVal;\n    newAppState.promptParts = rawPromptParts.map((part) => {\n      return {\n        text: part.trim(),\n        weight: '1' // TODO make this parseable from the prompt, i.e. foo::1 bar::0.5 baz::2\n      }\n    });\n    console.log('set the new app state to', newAppState);\n    setAppState(newAppState);\n  }\n\n  const rawPromptInputProps = {\n    onChange: onRawPromptInputChange\n  }\n\n  const onPromptPartWeightInputChange = (promptIndex: number, newWeight: string) => {\n    let newAppState = { ...appState };\n    newAppState.promptParts[promptIndex].weight = newWeight\n    setAppState(newAppState);\n  };\n\n  const promptBuilderProps = {\n    appState: appState,\n    onPromptPartWeightInputChange: onPromptPartWeightInputChange\n  }\n\n  const outputProps = {\n    appState: appState\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <p>Create your Horizon</p>\n      </header>\n      <div className=\"App-body\">\n        <RawPromptInput { ...rawPromptInputProps } />\n        <PromptBuilder { ...promptBuilderProps } />\n        <Output { ...outputProps } />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}