{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/projects/horizon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport PromptBuilder from './components/PromptBuilder';\nimport RawPromptInput from './components/RawPromptInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst splitPrompt = rawPrompt => {\n  let splitParts = rawPrompt.split('::');\n  return splitParts.filter(part => {\n    return part.trim() !== '';\n  });\n};\nconst App = () => {\n  _s();\n  const [appState, setAppState] = useState({\n    rawPrompt: '',\n    promptParts: [{\n      text: '',\n      weight: '1'\n    }]\n  });\n  const onRawPromptInputChange = e => {\n    const inputVal = e.target.value;\n    let newAppState = appState;\n    const rawPromptParts = splitPrompt(inputVal);\n    newAppState.rawPrompt = inputVal;\n    newAppState.promptParts = rawPromptParts.map(part => {\n      return {\n        text: part.trim(),\n        weight: '1' // TODO make this parseable from the prompt, i.e. foo::1 bar::0.5 baz::2\n      };\n    });\n\n    setAppState(newAppState);\n  };\n  const rawPromptInputProps = {\n    onChange: onRawPromptInputChange\n  };\n  const onPromptPartWeightInputChange = (promptIndex, e) => {\n    let newAppState = appState;\n    newAppState.promptParts[promptIndex].weight = e.target.value;\n    setAppState(newAppState);\n  };\n  const promptBuilderProps = {\n    appState: appState,\n    onPromptPartWeightInputChange: onPromptPartWeightInputChange\n  };\n  console.log('rerendering: App component');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your Horizon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: [/*#__PURE__*/_jsxDEV(RawPromptInput, {\n        ...rawPromptInputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PromptBuilder, {\n        ...promptBuilderProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"828WmAi4Jn6624ql3W/k8cfZoZI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PromptBuilder","RawPromptInput","jsxDEV","_jsxDEV","splitPrompt","rawPrompt","splitParts","split","filter","part","trim","App","_s","appState","setAppState","promptParts","text","weight","onRawPromptInputChange","e","inputVal","target","value","newAppState","rawPromptParts","map","rawPromptInputProps","onChange","onPromptPartWeightInputChange","promptIndex","promptBuilderProps","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/projects/horizon/src/App.tsx"],"sourcesContent":["import React , { useState } from 'react';\nimport './App.css';\nimport PromptBuilder from './components/PromptBuilder';\nimport RawPromptInput from './components/RawPromptInput';\n\nconst splitPrompt = (rawPrompt: string) => {\n  let splitParts = rawPrompt.split('::');\n  return splitParts.filter((part) => {\n    return part.trim() !== '';\n  });\n};\n\nconst App: React.FC = () => {\n  const [appState, setAppState] = useState({\n    rawPrompt: '',\n    promptParts: [{text: '', weight: '1'}]\n  });\n\n  const onRawPromptInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputVal = e.target.value;\n    let newAppState = appState;\n    const rawPromptParts = splitPrompt(inputVal);\n    newAppState.rawPrompt = inputVal;\n    newAppState.promptParts = rawPromptParts.map((part) => {\n      return {\n        text: part.trim(),\n        weight: '1' // TODO make this parseable from the prompt, i.e. foo::1 bar::0.5 baz::2\n      }\n    });\n    setAppState(newAppState);\n  }\n\n  const rawPromptInputProps = {\n    onChange: onRawPromptInputChange\n  }\n\n  const onPromptPartWeightInputChange = (promptIndex: number, e: React.ChangeEvent<HTMLInputElement>) => {\n    let newAppState = appState;\n    newAppState.promptParts[promptIndex].weight = e.target.value;\n    setAppState(newAppState);\n  };\n\n  const promptBuilderProps = {\n    appState: appState,\n    onPromptPartWeightInputChange: onPromptPartWeightInputChange\n  }\n\n  console.log('rerendering: App component');\n  return (\n    <div className=\"App\">\n      <header>\n        <p>Create your Horizon</p>\n      </header>\n      <div className=\"App-body\">\n        <RawPromptInput { ...rawPromptInputProps } />\n        <PromptBuilder { ...promptBuilderProps } />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}