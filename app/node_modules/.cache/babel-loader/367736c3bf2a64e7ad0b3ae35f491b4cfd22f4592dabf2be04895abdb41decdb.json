{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/projects/horizon/src/components/PromptBuilder.tsx\";\nimport React from 'react';\nimport PromptPiece from './PromptPiece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePartOutput = part => {\n  return `${part.text}::${part.weight}`;\n};\nconst generateOutput = promptParts => {\n  console.log(promptParts);\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n  let outputStr = '';\n  outputStr = promptParts.map(part => {\n    return generatePartOutput(part);\n  }).join('\\n');\n  return outputStr;\n};\nconst permutator = inputArr => {\n  var results = [];\n  function permute(arr, memo) {\n    var cur,\n      memo = memo || [];\n    for (var i = 0; i < arr.length; i++) {\n      cur = arr.splice(i, 1);\n      if (arr.length === 0) {\n        results.push(memo.concat(cur));\n      }\n      permute(arr.slice(), memo.concat(cur));\n      arr.splice(i, 0, cur[0]);\n    }\n    return results;\n  }\n  return permute(inputArr, []);\n};\nconst getCombinations = valuesArray => {\n  var combi = [];\n  var temp = [];\n  var slent = Math.pow(2, valuesArray.length);\n  for (var i = 0; i < slent; i++) {\n    temp = [];\n    for (var j = 0; j < valuesArray.length; j++) {\n      if (i & Math.pow(2, j)) {\n        temp.push(valuesArray[j]);\n      }\n    }\n    if (temp.length > 0) {\n      combi.push(temp);\n    }\n  }\n  combi.sort((a, b) => a.length - b.length);\n  console.log(combi.join(\"\\n\"));\n  return combi;\n};\nconst generatePermutationList = promptParts => {\n  // each promptPart has a 'text' and 'weight'.\n  const allWeights = promptParts.map(part => {\n    return part.weight;\n  });\n  const allWeightPermutations = permutator(promptParts.map(part => {\n    return part.weight;\n  }));\n  return permutator(promptParts);\n};\nconst PromptBuilder = ({\n  appState,\n  onPromptPartWeightInputChange\n}) => {\n  const promptParts = appState.promptParts;\n  const outputStr = generateOutput(promptParts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"promptBuilder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: promptParts.map((partData, index) => {\n        const promptPieceProps = {\n          onPromptPartWeightInputChange: onPromptPartWeightInputChange,\n          key: index,\n          index: index,\n          weight: partData.weight,\n          rawPromptPart: partData.text\n        };\n        return /*#__PURE__*/_jsxDEV(PromptPiece, {\n          ...promptPieceProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"/imagine prompt:\", outputStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptBuilder;\nexport default PromptBuilder;\nvar _c;\n$RefreshReg$(_c, \"PromptBuilder\");","map":{"version":3,"names":["React","PromptPiece","jsxDEV","_jsxDEV","generatePartOutput","part","text","weight","generateOutput","promptParts","console","log","length","trim","outputStr","map","join","permutator","inputArr","results","permute","arr","memo","cur","i","splice","push","concat","slice","getCombinations","valuesArray","combi","temp","slent","Math","pow","j","sort","a","b","generatePermutationList","allWeights","allWeightPermutations","PromptBuilder","appState","onPromptPartWeightInputChange","className","children","partData","index","promptPieceProps","key","rawPromptPart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/projects/horizon/src/components/PromptBuilder.tsx"],"sourcesContent":["import React , { FC } from 'react';\nimport PromptPiece from './PromptPiece';\n\ninterface PromptBuilderProps {\n  appState: any\n  onPromptPartWeightInputChange: any\n}\n\nconst generatePartOutput = (part: any) => {\n  return `${part.text}::${part.weight}`;\n};\n\nconst generateOutput = (promptParts: any) => {\n  console.log(promptParts);\n\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n\n  let outputStr = '';\n  outputStr = promptParts.map((part: any) => {\n    return generatePartOutput(part);\n  }).join('\\n');\n\n  return outputStr;\n};\n\nconst permutator = (inputArr: any[]) => {\n  var results: any[] = [];\n\n  function permute(arr: any[], memo: any[]) {\n    var cur, memo = memo || [];\n\n    for (var i = 0; i < arr.length; i++) {\n      cur = arr.splice(i, 1);\n      if (arr.length === 0) {\n        results.push(memo.concat(cur));\n      }\n      permute(arr.slice(), memo.concat(cur));\n      arr.splice(i, 0, cur[0]);\n    }\n\n    return results;\n  }\n\n  return permute(inputArr, []);\n}\n\nconst getCombinations = (valuesArray: String[]) => \n{\n\n  var combi = [];\n  var temp = [];\n  var slent = Math.pow(2, valuesArray.length);\n\n  for (var i = 0; i < slent; i++)\n  {\n    temp = [];\n    for (var j = 0; j < valuesArray.length; j++)\n    {\n      if ((i & Math.pow(2, j)))\n      {\n        temp.push(valuesArray[j]);\n      }\n    }\n    if (temp.length > 0)\n    {\n      combi.push(temp);\n    }\n  }\n\n  combi.sort((a, b) => a.length - b.length);\n  console.log(combi.join(\"\\n\"));\n  return combi;\n}\n\nconst generatePermutationList = (promptParts: any[]) => {\n  // each promptPart has a 'text' and 'weight'.\n  const allWeights = promptParts.map((part: any) => {\n    return part.weight;\n  });\n\n  const allWeightPermutations = permutator(\n    promptParts.map((part: any) => {\n      return part.weight;\n    })\n  );\n  return permutator(promptParts);\n};\n\nconst PromptBuilder: FC<PromptBuilderProps> = ({\n  appState,\n  onPromptPartWeightInputChange\n}) => {\n  const promptParts: any[] = appState.promptParts;\n  const outputStr = generateOutput(promptParts);\n\n  return (\n    <div className=\"promptBuilder\">\n      <div>\n        {promptParts.map((partData: any, index: number) => {\n          const promptPieceProps = {\n            onPromptPartWeightInputChange: onPromptPartWeightInputChange,\n            key: index,\n            index: index,\n            weight: partData.weight,\n            rawPromptPart: partData.text\n          };\n          return (\n            <PromptPiece { ...promptPieceProps } />\n          );\n        })}\n      </div>\n\n      <div className=\"output\">\n        <p>/imagine prompt:{outputStr}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default PromptBuilder\n"],"mappings":";AAAA,OAAOA,KAAK,MAAe,OAAO;AAClC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,kBAAkB,GAAIC,IAAS,IAAK;EACxC,OAAQ,GAAEA,IAAI,CAACC,IAAK,KAAID,IAAI,CAACE,MAAO,EAAC;AACvC,CAAC;AAED,MAAMC,cAAc,GAAIC,WAAgB,IAAK;EAC3CC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EAExB,IAAIA,WAAW,CAACG,MAAM,KAAK,CAAC,IAAIH,WAAW,CAAC,CAAC,CAAC,CAACH,IAAI,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjE,OAAO,EAAE;EACX;EAEA,IAAIC,SAAS,GAAG,EAAE;EAClBA,SAAS,GAAGL,WAAW,CAACM,GAAG,CAAEV,IAAS,IAAK;IACzC,OAAOD,kBAAkB,CAACC,IAAI,CAAC;EACjC,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAAC;EAEb,OAAOF,SAAS;AAClB,CAAC;AAED,MAAMG,UAAU,GAAIC,QAAe,IAAK;EACtC,IAAIC,OAAc,GAAG,EAAE;EAEvB,SAASC,OAAOA,CAACC,GAAU,EAAEC,IAAW,EAAE;IACxC,IAAIC,GAAG;MAAED,IAAI,GAAGA,IAAI,IAAI,EAAE;IAE1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACT,MAAM,EAAEY,CAAC,EAAE,EAAE;MACnCD,GAAG,GAAGF,GAAG,CAACI,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;MACtB,IAAIH,GAAG,CAACT,MAAM,KAAK,CAAC,EAAE;QACpBO,OAAO,CAACO,IAAI,CAACJ,IAAI,CAACK,MAAM,CAACJ,GAAG,CAAC,CAAC;MAChC;MACAH,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC,CAAC,EAAEN,IAAI,CAACK,MAAM,CAACJ,GAAG,CAAC,CAAC;MACtCF,GAAG,CAACI,MAAM,CAACD,CAAC,EAAE,CAAC,EAAED,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B;IAEA,OAAOJ,OAAO;EAChB;EAEA,OAAOC,OAAO,CAACF,QAAQ,EAAE,EAAE,CAAC;AAC9B,CAAC;AAED,MAAMW,eAAe,GAAIC,WAAqB,IAC9C;EAEE,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,WAAW,CAAClB,MAAM,CAAC;EAE3C,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,KAAK,EAAET,CAAC,EAAE,EAC9B;IACEQ,IAAI,GAAG,EAAE;IACT,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,CAAClB,MAAM,EAAEwB,CAAC,EAAE,EAC3C;MACE,IAAKZ,CAAC,GAAGU,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEC,CAAC,CAAC,EACvB;QACEJ,IAAI,CAACN,IAAI,CAACI,WAAW,CAACM,CAAC,CAAC,CAAC;MAC3B;IACF;IACA,IAAIJ,IAAI,CAACpB,MAAM,GAAG,CAAC,EACnB;MACEmB,KAAK,CAACL,IAAI,CAACM,IAAI,CAAC;IAClB;EACF;EAEAD,KAAK,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC1B,MAAM,GAAG2B,CAAC,CAAC3B,MAAM,CAAC;EACzCF,OAAO,CAACC,GAAG,CAACoB,KAAK,CAACf,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7B,OAAOe,KAAK;AACd,CAAC;AAED,MAAMS,uBAAuB,GAAI/B,WAAkB,IAAK;EACtD;EACA,MAAMgC,UAAU,GAAGhC,WAAW,CAACM,GAAG,CAAEV,IAAS,IAAK;IAChD,OAAOA,IAAI,CAACE,MAAM;EACpB,CAAC,CAAC;EAEF,MAAMmC,qBAAqB,GAAGzB,UAAU,CACtCR,WAAW,CAACM,GAAG,CAAEV,IAAS,IAAK;IAC7B,OAAOA,IAAI,CAACE,MAAM;EACpB,CAAC,CACH,CAAC;EACD,OAAOU,UAAU,CAACR,WAAW,CAAC;AAChC,CAAC;AAED,MAAMkC,aAAqC,GAAGA,CAAC;EAC7CC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMpC,WAAkB,GAAGmC,QAAQ,CAACnC,WAAW;EAC/C,MAAMK,SAAS,GAAGN,cAAc,CAACC,WAAW,CAAC;EAE7C,oBACEN,OAAA;IAAK2C,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5C,OAAA;MAAA4C,QAAA,EACGtC,WAAW,CAACM,GAAG,CAAC,CAACiC,QAAa,EAAEC,KAAa,KAAK;QACjD,MAAMC,gBAAgB,GAAG;UACvBL,6BAA6B,EAAEA,6BAA6B;UAC5DM,GAAG,EAAEF,KAAK;UACVA,KAAK,EAAEA,KAAK;UACZ1C,MAAM,EAAEyC,QAAQ,CAACzC,MAAM;UACvB6C,aAAa,EAAEJ,QAAQ,CAAC1C;QAC1B,CAAC;QACD,oBACEH,OAAA,CAACF,WAAW;UAAA,GAAMiD;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAE3C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrD,OAAA;MAAK2C,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrB5C,OAAA;QAAA4C,QAAA,GAAG,kBAAgB,EAACjC,SAAS;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA7BId,aAAqC;AA+B3C,eAAeA,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}