{"ast":null,"code":"var _jsxFileName = \"/home/patthomassoftware/projects/horizon/src/components/PromptBuilder.tsx\";\nimport React from 'react';\nimport PromptPiece from './PromptPiece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePartOutput = part => {\n  return `${part.text}::${part.weight}`;\n};\nconst generateOutput = appState => {\n  console.log(appState);\n  const {\n    promptParts\n  } = appState;\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n  let outputStr = '';\n  outputStr = promptParts.map(part => {\n    return generatePartOutput(part);\n  }).join('\\n');\n  return outputStr;\n};\nconst permutator = inputArr => {\n  var results = [];\n  function permute(arr, memo) {\n    var cur,\n      memo = memo || [];\n    for (var i = 0; i < arr.length; i++) {\n      cur = arr.splice(i, 1);\n      if (arr.length === 0) {\n        results.push(memo.concat(cur));\n      }\n      permute(arr.slice(), memo.concat(cur));\n      arr.splice(i, 0, cur[0]);\n    }\n    return results;\n  }\n  return permute(inputArr, []);\n};\nconst generatePermutationList = promptParts => {\n  return permutator(promptParts);\n};\nconst PromptBuilder = ({\n  appState,\n  onPromptPartWeightInputChange\n}) => {\n  const promptParts = appState.promptParts;\n  const allPromptPermutations = generatePermutationList(promptParts);\n  console.log('allPromptPermutations', allPromptPermutations);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"promptBuilder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: promptParts.map((partData, index) => {\n        const promptPieceProps = {\n          onPromptPartWeightInputChange: onPromptPartWeightInputChange,\n          key: index,\n          index: index,\n          weight: partData.weight,\n          rawPromptPart: partData.text\n        };\n        return /*#__PURE__*/_jsxDEV(PromptPiece, {\n          ...promptPieceProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [allPromptPermutations.map(() => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: generatePartOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generateOutput(appState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptBuilder;\nexport default PromptBuilder;\nvar _c;\n$RefreshReg$(_c, \"PromptBuilder\");","map":{"version":3,"names":["React","PromptPiece","jsxDEV","_jsxDEV","generatePartOutput","part","text","weight","generateOutput","appState","console","log","promptParts","length","trim","outputStr","map","join","permutator","inputArr","results","permute","arr","memo","cur","i","splice","push","concat","slice","generatePermutationList","PromptBuilder","onPromptPartWeightInputChange","allPromptPermutations","className","children","partData","index","promptPieceProps","key","rawPromptPart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patthomassoftware/projects/horizon/src/components/PromptBuilder.tsx"],"sourcesContent":["import React , { FC } from 'react';\nimport PromptPiece from './PromptPiece';\n\ninterface PromptBuilderProps {\n  appState: any\n  onPromptPartWeightInputChange: any\n}\n\nconst generatePartOutput = (part: any) => {\n  return `${part.text}::${part.weight}`;\n};\n\nconst generateOutput = (appState: any) => {\n  console.log(appState);\n  const {\n    promptParts\n  } = appState;\n\n  if (promptParts.length === 1 && promptParts[0].text.trim() === '') {\n    return '';\n  }\n\n  let outputStr = '';\n  outputStr = promptParts.map((part: any) => {\n    return generatePartOutput(part);\n  }).join('\\n');\n\n  return outputStr;\n};\n\nconst permutator = (inputArr: any[]) => {\n  var results: any[] = [];\n\n  function permute(arr: any[], memo: any[]) {\n    var cur, memo = memo || [];\n\n    for (var i = 0; i < arr.length; i++) {\n      cur = arr.splice(i, 1);\n      if (arr.length === 0) {\n        results.push(memo.concat(cur));\n      }\n      permute(arr.slice(), memo.concat(cur));\n      arr.splice(i, 0, cur[0]);\n    }\n\n    return results;\n  }\n\n  return permute(inputArr, []);\n}\n\nconst generatePermutationList = (promptParts: any[]) => {\n  return permutator(promptParts);\n};\n\nconst PromptBuilder: FC<PromptBuilderProps> = ({\n  appState,\n  onPromptPartWeightInputChange\n}) => {\n  const promptParts: any[] = appState.promptParts;\n\n  const allPromptPermutations = generatePermutationList(promptParts);\n  console.log('allPromptPermutations', allPromptPermutations);\n\n  return (\n    <div className=\"promptBuilder\">\n      <div>\n        {promptParts.map((partData: any, index: number) => {\n          const promptPieceProps = {\n            onPromptPartWeightInputChange: onPromptPartWeightInputChange,\n            key: index,\n            index: index,\n            weight: partData.weight,\n            rawPromptPart: partData.text\n          };\n          return (\n            <PromptPiece { ...promptPieceProps } />\n          );\n        })}\n      </div>\n\n      <div className=\"output\">\n        {allPromptPermutations.map(() => {\n          return (\n            <p>{generatePartOutput}</p>\n          );\n        })}\n        <p>{generateOutput(appState)}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default PromptBuilder\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}